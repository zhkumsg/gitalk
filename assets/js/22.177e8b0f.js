(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{205:function(s,t,a){"use strict";a.r(t);var n=a(0),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"使用pm2部署nodejs应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用pm2部署nodejs应用"}},[s._v("#")]),s._v(" 使用PM2部署nodejs应用")]),s._v(" "),a("p",[s._v("Introduce")]),s._v(" "),a("p",[s._v("在开发模式的时候，我们常用 "),a("code",[s._v("nodemon")]),s._v(" 和 "),a("code",[s._v("webpack")]),s._v(" 热更新nodejs项目（如express）和前端项目（如vue），但需要部署的时候我们就不能再用开发环境的配置了，需要改成生产环境配置。为了使得项目可以稳健的运行在服务端，node可以使用nohup启动，前端项目可以使用nginx代理。\n但是为了更加规范管理，我们应该使用pm2来管理node项目。")]),s._v(" "),a("p",[s._v("nohup(不推荐使用)")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("nohup")]),s._v(" Command "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" Arg … "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("\n")])])]),a("p",[a("em",[s._v("作用：不挂断地运行命令。")]),s._v("\n启动后通过 ps -ef 可以查看进程和 pid，如果需要停止，输入")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("kill")]),s._v(" 进程号（pid）\n")])])]),a("p",[s._v("需要特别注意的是，退出远程时，要使用 exit 退出，直接关闭远程工具将会导致后台静默进程停止。\n尽管nohup是内置工具，但万一服务抛异常，对外没有反应，表现为无端停止服务，对维护不友好。")]),s._v(" "),a("p",[a("strong",[s._v("pm2(推荐使用)")]),s._v("\n相比 nohup，pm2 更加合理，推荐使用 pm2 部署。\n首先全局安装 pm2")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" pm2 -g\n")])])]),a("p",[s._v("为了方便，我们可以把 pm2 软链接到系统环境下(假设 pm2 安装路径是/usr/sbin/nodejs/bin/pm2)，")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("// "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ln")]),s._v(" 是小写的"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'L'")]),s._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ln")]),s._v(" -s /usr/sbin/nodejs/bin/pm2  /usr/local/bin/\n")])])]),a("p",[s._v("最后在项目中添加 pm2 配置文件， "),a("code",[s._v("processes.json")])]),s._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"apps"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node-base-demo"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"script"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bin/www"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"env"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"NODE_ENV"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"production"')]),s._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("其中 name 代表进程别名，script 代表需要执行的命令，env 是注入到服务中的变量。")]),s._v(" "),a("p",[s._v("最后修改 package.json 的 start 命令(项目为 "),a("code",[s._v("express")]),s._v(" )为")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"start"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"pm2 start processes.json"')]),s._v("\n")])])]),a("p",[s._v("如果需要查看 pm2 状态，使用")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("pm2 list\n")])])]),a("p",[s._v("表明通过 pm2 启动项目。")]),s._v(" "),a("ul",[a("li",[s._v("start 模式下使用 pm2 部署（启动）项目")]),s._v(" "),a("li",[s._v("dev 模式下使用 nodemon 热更新调试项目")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run start\n")])])]),a("table",[a("thead",[a("tr",[a("th",[s._v("App name")]),s._v(" "),a("th",[s._v("id")]),s._v(" "),a("th",[s._v("version")]),s._v(" "),a("th",[s._v("mode")]),s._v(" "),a("th",[s._v("pid")]),s._v(" "),a("th",[s._v("status")]),s._v(" "),a("th",[s._v("restart")]),s._v(" "),a("th",[s._v("uptime")]),s._v(" "),a("th",[s._v("cpu")]),s._v(" "),a("th",[s._v("mem")]),s._v(" "),a("th",[s._v("user")]),s._v(" "),a("th",[s._v("watching")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("node-base-demo")]),s._v(" "),a("td",[s._v("0")]),s._v(" "),a("td",[s._v("1.0.0")]),s._v(" "),a("td",[s._v("fork")]),s._v(" "),a("td",[s._v("5552")]),s._v(" "),a("td",[a("code",[s._v("online")])]),s._v(" "),a("td",[s._v("0")]),s._v(" "),a("td",[s._v("0s")]),s._v(" "),a("td",[s._v("0%")]),s._v(" "),a("td",[s._v("31.5MB")]),s._v(" "),a("td",[s._v("admin")]),s._v(" "),a("td",[s._v("disabled")])])])]),s._v(" "),a("p",[s._v("停止或重启服务使用")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ pm2 stop "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("App name 或 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" 或 pid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n$ pm2 restart "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("App name 或 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" 或 pid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("p",[a("code",[s._v("自动启动")]),s._v("\n在实际情况下，偶尔会发生服务器宕机，可是重启后pm2应用不会被自动启动，这时候我们就需要去保存我们的pm2状态，然后配置开机自启。")]),s._v(" "),a("ol",[a("li",[s._v("保存状态")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ pm2  save\n")])])]),a("p",[s._v("执行后会输出")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code")])]),a("p",[s._v("[PM2] Successfully saved in /root/.pm2/dump.pm2")]),s._v(" "),a("p",[s._v("这表示pm2把当前应用列表启动信息保存到了磁盘文件上")]),s._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[s._v("设置开机自启")])]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ pm2  startup\n")])])]),a("p",[s._v("执行后输出")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("[PM2] Init System found: systemd\n\n... \n+---------------------------------------+\n[PM2] Freeze a process list on reboot via:\n$ pm2 save\n[PM2] Remove init script vi\n")])])]),a("p",[s._v("这表明pm2往系统中写入了开机启动任务，开机是自动启动上次pm2保存的应用列表")]),s._v(" "),a("p",[s._v("这时候如果想测试，可以手动重启服务器试一下，查看一下pm2应用任务是否正确启动")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("reboot")]),s._v("\n")])])]),a("p",[a("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/13908708-0350b29ea5502cc2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"重启后检查pm2应用"}})]),s._v(" "),a("p",[s._v("再也不用担心重启后服务不起了。")]),s._v(" "),a("hr"),s._v(" "),a("p",[a("strong",[s._v("nginx")]),s._v("\n作为一个高性能的http和反向代理服务，在linux上不免要选用它。\n"),a("a",{attrs:{href:"https://www.jianshu.com/p/86d6f074e6fc",target:"_blank",rel:"noopener noreferrer"}},[s._v("安装教程"),a("OutboundLink")],1),s._v(" "),a("a",{attrs:{href:"https://www.jianshu.com/p/d4aed5e17b29",target:"_blank",rel:"noopener noreferrer"}},[s._v("代理教程"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("对于Web而已，80端口和443端口是十分重要的，原则上需要输入"),a("a",{attrs:{href:"http://domain.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("http://domain.com:80"),a("OutboundLink")],1),s._v("才可以浏览网页的，但由于默认端口是80，所以‘:80’可以忽略。同理对于https的443端口也一样。")]),s._v(" "),a("p",[s._v("所以我们常常需要在80端口监听多个服务，这就必须要用上nginx的代理功能了。用法如下：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /ect/nginx/nginx.conf\n")])])]),a("p",[s._v("常规配置")]),s._v(" "),a("div",{staticClass:"language-conf extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// nginx.conf\n# vue项目配置\nserver {\n    listen       8080;\n    root         /web/vue-base-demo/dist/;\n    index        index.html;\n    location / {\n        try_files $uri $uri/ /index.html; # 路由模式history的修改\n    }\n}\n\n# react项目配置\nserver {\n    listen       8081;\n    root         /web/react-base-demo/build;\n    index        index.html;\n    location / {}\n}\n")])])]),a("p",[s._v("代理配置")]),s._v(" "),a("div",{staticClass:"language-conf extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// nginx.conf\n# nginx 80端口配置 （监听vue二级域名）\nserver {\n    listen  80;\n    server_name     vue.msg.com;\n    location / {\n        proxy_pass      http://localhost:8080; # 转发\n    }\n}\n\n# nginx 80端口配置 （监听react二级域名）\nserver {\n    listen  80;\n    server_name     react.msg.com;\n    location / {\n        proxy_pass      http://localhost:8081; # 转发\n    }\n}\n")])])]),a("p",[s._v("nginx如果检测到vue.msg.com的请求，将 "),a("code",[s._v("转发")]),s._v(" 请求到本机的8080端口，如果检测到的是react.msg.com请求，也会将请求 "),a("code",[s._v("转发")]),s._v(" 到8081端口。")]),s._v(" "),a("p",[s._v("同样的，如果前面用pm2开启了node项目，而且运行在3000端口，并且已经做好了域名映射，如（api.msg.com），我们可以同理配置代理")]),s._v(" "),a("div",{staticClass:"language-conf extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# nginx 80端口配置 （监听api二级域名）\nserver {\n    listen  80;\n    server_name     api.msg.com;\n    location / {\n        proxy_pass      http://localhost:3000; \n        # 转发(express已经由pm2启动)\n    }\n}\n")])])]),a("p",[s._v("上面就是linux上部署项目的教程（后续介绍 "),a("code",[s._v("docker部署")]),s._v(" ）。")])])}),[],!1,null,null,null);t.default=e.exports}}]);