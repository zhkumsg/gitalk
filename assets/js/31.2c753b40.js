(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{213:function(t,e,a){"use strict";a.r(e);var v=a(0),r=Object(v.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"如何工程化前端项目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何工程化前端项目"}},[t._v("#")]),t._v(" 如何工程化前端项目")]),t._v(" "),a("h4",{attrs:{id:"前端的发展历程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端的发展历程"}},[t._v("#")]),t._v(" 前端的发展历程")]),t._v(" "),a("p",[t._v("刚开始的时候其实并没有前端开发工程师一职的，有点是网站开发工程师，这时候页面还是很简单的，是最单纯的静态页面，工程师们只需要在页面上写点展示内容就可以了")]),t._v(" "),a("p",[t._v("过了不久，静态页面不能满足人们的需求了，人们需要向服务器提交信息和获取内容，这时候动态页面出现了（php、jsp、asp等）。在这一阶段，前端的任务还没有很重，后端同学可以兼顾前端开发，所以前端的戏份不是很多（这时候的前端同学又被称为切图仔）")]),t._v(" "),a("p",[t._v("到了2004年，ajax技术的出现引发了web的变革，各种前端技术相继爆发，迎来了web2.0，前端开发工程师正式登上历史的舞台")]),t._v(" "),a("p",[t._v("同年，w3c发布html5推荐标准，前端的可发展的空间进一步扩大")]),t._v(" "),a("p",[t._v("2009年，nodejs爆发，使得前端开发工程师可以利用javascript开发服务器端程序，开始可以独立承当项目开发，向更高更全发展")]),t._v(" "),a("p",[t._v("随着各大浏览器厂商对html5支持度越来越高，前端能够实现的交互功能越多，相应的代码复杂度也快速提高，以前用于后端的MVC框架也开始出现在前端部分。从2010年10月开始，angular、vue、react等MV*框架相继出现")]),t._v(" "),a("p",[t._v("2015年6月，ECMAScript 6.0发布，该版本带来了很多新的语法，极大的拓展了javascript的潜力")]),t._v(" "),a("p",[t._v("到近几年，"),a("code",[t._v("React Native、electron、flutter")]),t._v("，以及2020年初大火的"),a("code",[t._v("serverless、微前端")]),t._v("，究竟哪门技术是下一个爆发点呢，让我们拭目以待")]),t._v(" "),a("img",{attrs:{src:"https://reactnative.cn/img/header_logo.svg",width:"64px"}}),t._v(" "),a("img",{attrs:{src:"https://electronjs.org/images/favicon.ico"}}),t._v(" "),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/flutterchina/website@1.0/images/flutter-mark-square-100.png"}}),t._v(" "),a("h4",{attrs:{id:"前端项目复杂度剧变"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端项目复杂度剧变"}},[t._v("#")]),t._v(" 前端项目复杂度剧变")]),t._v(" "),a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/flutterchina/website@1.0/images/homepage/header-illustration.png",width:"70%"}}),t._v(" "),a("p",[t._v("挑战和机遇并存，前端高速发展的前提下，我们的应用也逐步扩大，涉及的业务也不断增加，已经不是单纯靠一个js文件一个html就可以解决的了")]),t._v(" "),a("p",[t._v("现在的应用往往都会包含用户模块、角色模块、权限模块、列表模块和详情模块等，而且项目快速迭代、人员流动，慢慢的再好的项目也会向"),a("code",[t._v("巨石应用")]),t._v("演变")]),t._v(" "),a("p",[t._v("项目愈加复杂表明业务愈加庞大，这是好事，但我们要尽可能避免"),a("code",[t._v("巨石应用")]),t._v("的产生，我们该怎么做呢？")]),t._v(" "),a("h4",{attrs:{id:"如何使用工程化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何使用工程化"}},[t._v("#")]),t._v(" 如何使用工程化")]),t._v(" "),a("p",[t._v("想要有一个健壮的程序，架构和业务缺一不可，其中架构确定基础，业务决定高度，再好的业务没有稳定的根基都是空谈")]),t._v(" "),a("p",[t._v("下面我们将介绍如何工程化我们的项目，使得以不变应万变，在前端发展的急流中进退自如")]),t._v(" "),a("p",[t._v("以 "),a("code",[t._v("vue全家桶")]),t._v(" 为例")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("模块")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("vue-router")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("路由")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("vuex")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("状态管理器")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("axios")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("ajax请求")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("elementui")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("ui框架")])])])]),t._v(" "),a("p",[t._v("loading...")])])}),[],!1,null,null,null);e.default=r.exports}}]);